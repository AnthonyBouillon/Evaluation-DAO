/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DAL.Client;
import DAL.ClientDAO;
import java.awt.Color;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import javax.swing.BorderFactory;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 * Formulaire qui permet la gestion de 1 ou N client Ajouter, Modifier,
 * Supprimer, Lire
 *
 * @author 80010-37-15
 */
public class InterfaceClient extends javax.swing.JFrame {

    String message = "";
    // Défini si l'utilisateur veut ajouter ou modifier un client
    boolean add_button = false;
    // Instance de mes trois classes
    Client client = new Client();
    ClientDAO clients = new ClientDAO();
    jTable model_jtable = new jTable();

    /**
     * Creates new form InterfaceClient
     */
    public InterfaceClient() {
        initComponents();
        // Défini une taille à l'ouverture de l'application
        setSize(595, 550);
        /*
         * Affiche les clients dans le tableau.
         * Affiche une erreur si il y a un problème avec la liste
         */
        List_client.setModel(model_jtable);
        if (clients.message == null) {
            JOptionPane.showMessageDialog(null, "Désolé, la liste des clients est indisponible");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        Delete_button = new javax.swing.JButton();
        Add_button = new javax.swing.JButton();
        Update_button = new javax.swing.JButton();
        text_error = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        OK_button = new javax.swing.JButton();
        Cancel_button = new javax.swing.JButton();
        city = new javax.swing.JTextField();
        firstname = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        List_client = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gestion des fournisseurs");

        Delete_button.setText("Supprimer");
        Delete_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_buttonActionPerformed(evt);
            }
        });

        Add_button.setText("Ajouter");
        Add_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add_buttonActionPerformed(evt);
            }
        });

        Update_button.setText("Modifier");
        Update_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update_buttonActionPerformed(evt);
            }
        });

        text_error.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                text_errorAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Delete_button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                    .addComponent(Add_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Update_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(text_error, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(Add_button)
                .addGap(18, 18, 18)
                .addComponent(Update_button)
                .addGap(18, 18, 18)
                .addComponent(Delete_button)
                .addGap(37, 37, 37)
                .addComponent(text_error, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Details"));

        jLabel1.setText("Nom");

        jLabel2.setText("Ville");

        jLabel3.setText("Prénom");

        OK_button.setText("OK");
        OK_button.setMaximumSize(new java.awt.Dimension(72, 32));
        OK_button.setMinimumSize(new java.awt.Dimension(72, 32));
        OK_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OK_buttonActionPerformed(evt);
            }
        });

        Cancel_button.setText("Annuler");
        Cancel_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cancel_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(OK_button, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 103, Short.MAX_VALUE)
                        .addComponent(Cancel_button))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(city)
                            .addComponent(firstname)
                            .addComponent(name))))
                .addGap(41, 41, 41))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(firstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(city, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OK_button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Cancel_button))
                .addContainerGap())
        );

        List_client.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        List_client.setColumnSelectionAllowed(true);
        jScrollPane3.setViewportView(List_client);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(62, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(89, 89, 89))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void OK_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OK_buttonActionPerformed

        int cpt_error = 0;
        // Expression régulière Alphabet + accent + espace + tiret + limite de 1 à 50
        Pattern PATTERN = Pattern.compile("^[A-Za-záàâäãåçéèêëíìîïñóòôöõúùûüýÿæœÁÀÂÄÃÅÇÉÈÊËÍÌÎÏÑÓÒÔÖÕÚÙÛÜÝŸÆŒ-]+{1,50}$");
        Matcher VALIDATE_NAME = PATTERN.matcher(name.getText());
        Matcher VALIDATE_FIRSTNAME = PATTERN.matcher(firstname.getText());
        Matcher VALIDATE_CITY = PATTERN.matcher(city.getText());
        /*
             * Si ce n'est pas vide et que la regex est respectée
             * Je récupère les valeurs des champs,
             * Sinon les bordures deviennent rouge
         */
        if (VALIDATE_NAME.find()) {
            client.setNom(name.getText());
            name.setBorder(BorderFactory.createLineBorder(Color.gray));
        } else {
            cpt_error++;
            name.setBorder(BorderFactory.createLineBorder(Color.red));
        }
        if (VALIDATE_FIRSTNAME.find()) {
            client.setPrenom(firstname.getText());
            firstname.setBorder(BorderFactory.createLineBorder(Color.gray));
        } else {
            cpt_error++;
            firstname.setBorder(BorderFactory.createLineBorder(Color.red));
        }
        if (VALIDATE_CITY.find()) {
            client.setVille(city.getText());
            city.setBorder(BorderFactory.createLineBorder(Color.gray));
        } else {
            cpt_error++;
            city.setBorder(BorderFactory.createLineBorder(Color.red));
        }
        // Si l'utilisateur à cliquer precedemment sur le bouton Ajouter / Sinon c'est le bouton modifier
        if (add_button == true) {
            if (cpt_error == 0) {
                try {
                    clients.Create(client);
                    message = "Client ajouté avec succès";
                    text_error.setText(message);
                } catch (SQLException ex) {
                    ex.getErrorCode();
                    message = "Désolé, le client n'a pas pu être ajouté";
                    text_error.setText(message);
                }
                model_jtable.AjouteClient(client);
                model_jtable.Actualise();
                // Puis, je vide les champs
                empty_field();
                // Redefini la taille
                setSize(595, 550);
                add_button = false;
                // Affiche message de succès
               
            }
        } else {
            if (cpt_error == 0) {
                // Je récupère l'id dans la ligne sélectionnée
                client.setId(model_jtable.clients_list.get(num_ligne()).getId());
                /**
                 * Modifie les infos client dans la base de données Actualise la
                 * liste de client dans la jTable
                 */
                clients.Update(client);
                model_jtable.Actualise();
                // Et, je vide les champs
                empty_field();
                // Redefini la taille
                setSize(595, 550);
                // Affiche message de succès
                text_error.setText(clients.message);
            }
        }
    }//GEN-LAST:event_OK_buttonActionPerformed

    private void Cancel_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cancel_buttonActionPerformed
        text_error.setText("");
        /*
         * Definition de la taille
         * Vide les champs de texte
         * Bouton Ajouter à false
         */
        setSize(595, 550);
        add_button = false;
        empty_field();
    }//GEN-LAST:event_Cancel_buttonActionPerformed

    private void Update_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update_buttonActionPerformed
        add_button = false;
        /**
         * Affiche dans les champs les données du client sélectionné Si aucune
         * ligne n'est sélectionné, affiche un message d'erreur
         */
        if (num_ligne() != -1) {
            setSize(987, 550);
            text_error.setText("");
            // Affiche les informations du client dans les champs de texte
            name.setText(model_jtable.clients_list.get(num_ligne()).getNom());
            firstname.setText(model_jtable.clients_list.get(num_ligne()).getPrenom());
            city.setText(model_jtable.clients_list.get(num_ligne()).getVille());
        } else {
            text_error.setText("<html><marquee>Veuillez sélectionner un client <br/>avant de le modifier</marquee><hr/><center style='max-width: 10%;'><img src='https://s1.qwant.com/thumbr/0x0/8/0/72200c66d4f5f8505e2fd07b6300796fcf361232b24696275eaffd63d59502/desventajas.png?u=https%3A%2F%2Fdatadesk.es%2Fwp-content%2Fuploads%2F2015%2F08%2Fdesventajas.png&q=0&b=1&p=0&a=1' style='max-width: 10%;'></center></html>");
        }
    }//GEN-LAST:event_Update_buttonActionPerformed

    private void Add_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add_buttonActionPerformed
        text_error.setText("");
        add_button = true;
        setSize(987, 550);
    }//GEN-LAST:event_Add_buttonActionPerformed

    private void Delete_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_buttonActionPerformed
        add_button = false;
        /**
         * Vérification de la ligne sélectionnée Récupération de l'identifiant
         * du client Appelle de la méthode DELETE() pour supprimer le client
         * dans la bdd Appelle de la méthode SupprimerClient() pour supprimer le
         * client dans la liste
         */
        if (num_ligne() != -1) {
            client.setId(model_jtable.clients_list.get(num_ligne()).getId());
            clients.Delete(client);
            model_jtable.SupprimerClient(num_ligne());
            text_error.setText(clients.message);
        } else {
            text_error.setText("<html><marquee>Veuillez sélectionner un client <br/>avant de le supprimer</marquee><hr/><center style='max-width: 10%;'><img src='https://s1.qwant.com/thumbr/0x0/8/0/72200c66d4f5f8505e2fd07b6300796fcf361232b24696275eaffd63d59502/desventajas.png?u=https%3A%2F%2Fdatadesk.es%2Fwp-content%2Fuploads%2F2015%2F08%2Fdesventajas.png&q=0&b=1&p=0&a=1' style='max-width: 10%;'></center></html>");
        }
    }//GEN-LAST:event_Delete_buttonActionPerformed

    private void text_errorAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_text_errorAncestorAdded
        text_error.setForeground(Color.blue);
    }//GEN-LAST:event_text_errorAncestorAdded

    /**
     * Méthode qui me permet de connaitre la ligne que l'utilisateur à
     * sélectionné
     *
     * @return la ligne sélectionnée
     */
    public int num_ligne() {
        int ligne = List_client.getSelectedRow();
        return ligne;
    }

    /**
     * Vide les champs de texte
     */
    public void empty_field() {
        name.setText("");
        firstname.setText("");
        city.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfaceClient.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfaceClient.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfaceClient.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfaceClient.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfaceClient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add_button;
    private javax.swing.JButton Cancel_button;
    private javax.swing.JButton Delete_button;
    private javax.swing.JTable List_client;
    private javax.swing.JButton OK_button;
    private javax.swing.JButton Update_button;
    private javax.swing.JTextField city;
    private javax.swing.JTextField firstname;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField name;
    private javax.swing.JLabel text_error;
    // End of variables declaration//GEN-END:variables
}
